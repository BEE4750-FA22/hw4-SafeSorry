---
title: "BEE 4750/5750 Homework 4"
author: "Sonjay Lake (svl24)"
date: `j import Dates; Dates.Date(Dates.now())`
weave_options:
    term: false
    results: tex
    cache: off
---

<!-- This setups the environment and installs packages, but doesn't appear in the generated document -->
<!-- You shouldn't need to modify this -->
```julia; echo = false; results = "hidden"
using Pkg
Pkg.activate(".")
Pkg.instantiate()
```

# Problem 1

## Problem 1.1
```julia; echo=false
Components = ["Food Wastes","Paper & Cardboard","Plastics","Textiles","Rubber and Leather","Wood","Yard Wastes","Glass","Ferrous",
"Aluminum","Other Metal","Misc"]

percent_mass = [0.15,0.4,0.05,0.03,0.02,0.05,0.18,0.04,0.02,0.02,0.01,0.03]
percent_ash = [0.08,0.07,0.05,0.1,0.15,0.02,0.02,1,1,1,1,.7]
recycling_rate = [0,0.55,0.15,0.1,0,0.3,0.4,0.6,0.75,0.8,0.5,0]

overall_recycling = round(sum(percent_mass .* recycling_rate),digits=2)
overall_ash = round(sum(percent_mass .* percent_ash),digits=2)
```

The overall recycling and ash fraction rates for the two cities are 0.38 and 0.16 respectively.

## Problem 1.2
The decision variables are the amount of waste sent to a particular site, W, 
the residual waste transported from one site to another, R, 
and the operational status of each plant Y.

We can use subscripts to denote the particular site, (k or j), and the city it is coming from, i. 



```math 
\begin{alignat*}{0}
W_{i,j} = \text {Mg of waste sent from city i to site j} \\
R_{k,j} = \text {Residual waste transported from site k to site j } \\
Y_{j} = \text {Whether a plant is on or off}
\end{alignat*}{0}
```

## Problem 1.3

```julia 
Pkg.add("JuMP")
Pkg.add("HiGHS")
using JuMP 
using HiGHS

waste = Model(HiGHS.Optimizer)
I = 1:2; #number of cities
J = 1:3; #number of disposal sites

#Waste transportation costs:
#City 1 ; City 2
#j1 = WTE, j2 = RF, j3 = LF
waste_transport_costs = 1.5.*[(15*60) (5*7) (30*50);(10*60) (15*7) (25*50)]
residual_costs = 1.5*[0 (18*45) 15;0 0 0;0 (18*45) 0]
operation_costs = [2500;1500;2000]

@variable(waste, W[i in I, j in J] >= 0)
@variable(waste, R[k in J, j in J] >= 0)
@variable(waste, Y[j in J], Bin)

@objective(waste, Min, sum(waste_transport_costs .* W) + sum(residual_costs .* R) + sum(operation_costs .* Y))



```

## Problem 1.4

A realistic problem involves the conservation of mass this means that 
the summation of all wastes from a certain city should be equal to 
the its total output per day. This can be represented as:
 

```math
\begin{alignat*}{0}
\sum_{W_{[i,:]}} = \text{output of city i}
\end{alignat*}{0}
```

Where W is the amount of waste released by city i, and the 
output of city i represents its daily waste production (kg/day)


Each site also has to be constrained on the waste they can process per day
based on their total capacity. The sum of the amount of waste they take in 
and the amount recycled waste should not exceed their capacity.

```math 
\begin{alignat*}{0}
\sum{W_{i,j} + R_{i,j}} \le \text{plant capacity}
\end{alignat*}{0}
```

The residual waste also needs to be constrained to ensure that 
waste sites aren't sending residual waste to one another, that the 
largest capacity plant isn't sending residual waste to smaller plants, 
and ensure that the residuals for the recycling and waste to energy conversion 
plant have the correct ratio.

The on/off condition also has to be added as a constraint. 

```julia 

city_out = [100; 170]
@constraint(waste, city[i in I], sum(W[i,:]) == city_out[i])
#j1 = WTE, j2 = RF, j3 = LF
#waste to energy
@constraint(waste, wte, W[1,1] + W[2,1] + R[2,1] <= 150)
#recycling facility
@constraint(waste, rf, W[1,2] + W[2,2]  <= 350)
#landfill facility
@constraint(waste, lf, W[1,3] + W[2,3] + R[2,3] + R[1,3] <= 200)

#residuals: k,j from site k to site j 

@constraint(waste, resid1, R[1,3] == overall_ash .* (W[1,1] + W[2,1] + R[2,1]))
@constraint(waste, resid2, R[2,1] + R[2,3] == (1-overall_recycling) .* (W[1,2] + W[2,2]))
@constraint(waste, resid3, sum(R[3,:]) == 0)
@constraint(waste, noresiddiag, sum(R[i, i] for i in I) == 0)
@constraint(waste, noresid, R[1,2] == 0)

#commitment
#Y = 1 -> ON, Y=0 -> OFF
@constraint(waste, commit1, W[1,1] + W[2,1] + R[2,1] - (10000*Y[1])<= 0)
@constraint(waste, commit2, W[1,2] + W[2,2] - (10000*Y[2]) <=0)
@constraint(waste, commit3, Y[3] == 1)

```

## Problem 1.5

```julia 
set_silent(waste)
optimize!(waste)
objective_value(waste)
value.(Y)
value.(W)
value.(R)

#j1 = WTE, j2 = RF, j3 = LF


```

## Problem 1.6
The optimal objective value is 35525. The facility that wont be 
used is the waste to energy facility. A diagram is below, the locations 
and distances of each site are not accurate.

![Model 1:]("flowmodel2.pdf")

# Problem 2

## Problem 2.1

Changes to the tipping fee only impact the WTE facility, which was not 
reccomended for use in the first place. The changes will work to make it a 
much less viable option. However, the slight increase in transportation const 
could see it gaining viability and seeing use as its moderate distance 
from cities could give it an advantage over the landfill disposal site under 
certain conditions.

The optimization problem would have changed waste transport costs and 
and increased tipping fee for the WTE facility.


## Problem 2.2
```julia; echo=false
waste_carbon = Model(HiGHS.Optimizer)
I = 1:2; #number of cities
J = 1:3; #number of disposal sites

#Waste transportation costs:
#City 1 ; City 2
#j1 = WTE, j2 = RF, j3 = LF
waste_transport_costs = 2.0.*[(15*75) (5*7) (30*50);(10*75) (15*7) (25*50)]
residual_costs = 2.0*[0 (18*45) 15;0 0 0;0 (18*45) 0]
operation_costs = [2500;1500;2000]

@variable(waste_carbon, W[i in I, j in J] >= 0)
@variable(waste_carbon, R[k in J, j in J] >= 0)
@variable(waste_carbon, Y[j in J], Bin)

@objective(waste_carbon, Min, sum(waste_transport_costs .* W) + sum(residual_costs .* R) + sum(operation_costs .* Y))


city_out = [100; 170]
@constraint(waste_carbon, city[i in I], sum(W[i,:]) == city_out[i])
#j1 = WTE, j2 = RF, j3 = LF
#waste to energy
@constraint(waste_carbon, wte, W[1,1] + W[2,1] + R[2,1] <= 150)
#recycling facility
@constraint(waste_carbon, rf, W[1,2] + W[2,2]  <= 350)
#landfill facility
@constraint(waste_carbon, lf, W[1,3] + W[2,3] + R[2,3] + R[1,3] <= 200)

#residuals: k,j from site k to site j 

@constraint(waste_carbon, resid1, R[1,3] == overall_ash .* (W[1,1] + W[2,1] + R[2,1]))
@constraint(waste_carbon, resid2, R[2,1] + R[2,3] == (1-overall_recycling) .* (W[1,2] + W[2,2]))
@constraint(waste_carbon, resid3, sum(R[3,:]) == 0)
@constraint(waste_carbon, noresiddiag, sum(R[i, i] for i in I) == 0)
@constraint(waste_carbon, noresid, R[1,2] == 0)

#commitment
#Y = 1 -> ON, Y=0 -> OFF
@constraint(waste_carbon, commit1, W[1,1] + W[2,1] + R[2,1] - (10000*Y[1])<= 0)
@constraint(waste_carbon, commit2, W[1,2] + W[2,2] - (10000*Y[2]) <=0)
@constraint(waste_carbon, commit3, Y[3] == 1)


```
## Problem 2.3
```julia 
set_silent(waste_carbon)
set_silent(waste_carbon)
optimize!(waste_carbon)
objective_value(waste_carbon)
value.(Y)
value.(W)
value.(R)

```
A diagram is below. The distances and positions of the sites 
are not accurate. The flows are correct. The objective value is 46200.

![Model 2: Carbon Tax]("flowmodel2.pdf")



# References
##include("compile_report.jl")
#compile_report("hw4.jmd","html")

#M = 10,000